{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/kpi/assign/": {
            "post": {
                "tags": [
                    "kpi"
                ],
                "description": "assigns new KPI information to a member of the team",
                "operationId": "KPIController.AssignKPI",
                "parameters": [
                    {
                        "in": "KPIObject",
                        "name": "object",
                        "description": "the KPI object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.KPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/kpi/range/": {
            "post": {
                "tags": [
                    "kpi"
                ],
                "description": "gets a kpi information from ID",
                "operationId": "KPIController.GetKPIFromID",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/kpi/report/{userid}/{month}": {
            "get": {
                "tags": [
                    "kpi"
                ],
                "description": "gets a team member kpi information for the month",
                "operationId": "KPIController.GetMemberKPIReport",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/kpi/score/": {
            "post": {
                "tags": [
                    "kpi"
                ],
                "description": "create score and supervisor comment for a KPI",
                "operationId": "KPIController.ScoreKPI",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The kpi data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.KPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} \"Success\""
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/kpi/task/": {
            "get": {
                "tags": [
                    "kpi"
                ],
                "description": "gets all tasks belonging to a KPI",
                "operationId": "KPIController.GetAllTasks",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "kpi"
                ],
                "description": "create object",
                "operationId": "KPIController.CreateTask",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The task data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Visit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} \"Success\""
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/kpi/task/complete/{tid}": {
            "get": {
                "tags": [
                    "kpi"
                ],
                "description": "mark task as complete",
                "operationId": "KPIController.MarkTaskComplete",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The task data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Visit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} \"Success\""
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/kpi/task/{kpiid}": {
            "get": {
                "tags": [
                    "kpi"
                ],
                "description": "gets all tasks belonging to a KPI",
                "operationId": "KPIController.GetAllKPITasks",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/kpi/{kpiid}": {
            "get": {
                "tags": [
                    "kpi"
                ],
                "description": "gets a kpi information from ID",
                "operationId": "KPIController.GetKPIFromID",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            },
            "delete": {
                "tags": [
                    "kpi"
                ],
                "description": "delete a user kpi information",
                "operationId": "KPIController.DeleteKPI",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "uid is empty"
                    }
                }
            }
        },
        "/lead/member/{id}": {
            "post": {
                "tags": [
                    "lead"
                ],
                "description": "send an invitation to add a new team member using the user ID",
                "operationId": "TeamLeadController.AddNewMember",
                "parameters": [
                    {
                        "in": "path",
                        "name": "visitid",
                        "description": "the id of the user you want to make a front desk officer",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} id of the user"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/lead/myteam/": {
            "get": {
                "tags": [
                    "lead"
                ],
                "description": "gets a team information",
                "operationId": "TeamLeadController.GetMyTeamInfo",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/lead/pending": {
            "get": {
                "tags": [
                    "lead"
                ],
                "description": "gets a team's pending member information",
                "operationId": "TeamLeadController.GetMyPendingTeam",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/lead/pending/{id}": {
            "delete": {
                "tags": [
                    "lead"
                ],
                "description": "deletes a team invitation using the user ID",
                "operationId": "TeamLeadController.Delete",
                "responses": {
                    "200": {
                        "description": "{string} id of the user"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/lead/team/": {
            "post": {
                "tags": [
                    "lead"
                ],
                "description": "creates a new team using the user ID",
                "operationId": "TeamLeadController.CreateTeam",
                "parameters": [
                    {
                        "in": "path",
                        "name": "teamid",
                        "description": "the team object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} id of the user"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/lead/validate": {
            "get": {
                "tags": [
                    "lead"
                ],
                "description": "checks if a user has created a team",
                "operationId": "TeamLeadController.VerifiHasTeam",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/objectives/": {
            "post": {
                "tags": [
                    "objectives"
                ],
                "description": "creates a stategic Objective",
                "operationId": "ObjectiveController.CreateObjective",
                "parameters": [
                    {
                        "in": "KPIObject",
                        "name": "object",
                        "description": "the KPI object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.KPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/objectives/complete/{objectiveid}": {
            "get": {
                "tags": [
                    "objectives"
                ],
                "description": "mark strategic objective as complete",
                "operationId": "ObjectiveController.MarkObjectiveComplete",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The Objective ID",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Visit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} \"Success\""
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/objectives/lead/": {
            "get": {
                "tags": [
                    "objectives"
                ],
                "description": "gets a team strategic objectives",
                "operationId": "ObjectiveController.GetStrategiveObjectives",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/objectives/member/": {
            "get": {
                "tags": [
                    "objectives"
                ],
                "description": "gets the strategic objectives of the team they belong to.",
                "operationId": "ObjectiveController.GetMemberStrategiveObjectives",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/objectives/{objid}": {
            "delete": {
                "tags": [
                    "objectives"
                ],
                "description": "deletes a team strategic objective",
                "operationId": "ObjectiveController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "teamid",
                        "description": "the id of the objective you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/": {
            "delete": {
                "tags": [
                    "team"
                ],
                "description": "deletes a team using the team id",
                "operationId": "TeamController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "teamid",
                        "description": "the id of the team you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/accept/{teamid}": {
            "post": {
                "tags": [
                    "team"
                ],
                "description": "accepts a new team invitation",
                "operationId": "TeamController.AcceptTeamInvitation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "teamid",
                        "description": "the team object",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} id of the user"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/behaviour/": {
            "post": {
                "tags": [
                    "team"
                ],
                "description": "takes a team behavioural tests",
                "operationId": "TeamController.TakeBehaviourTest",
                "parameters": [
                    {
                        "in": "path",
                        "name": "models.BehaviourTest",
                        "description": "the test result",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/invitations/pending": {
            "get": {
                "tags": [
                    "team"
                ],
                "description": "gets a team pending team requests",
                "operationId": "TeamController.GetMyPendingTeam",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/invitations/{invitationid}": {
            "delete": {
                "tags": [
                    "team"
                ],
                "description": "deletes a team pending invtation.",
                "operationId": "TeamController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "teamid",
                        "description": "the id of the invitation you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/member/{id}": {
            "delete": {
                "tags": [
                    "team"
                ],
                "description": "deletes a team member using the team id",
                "operationId": "TeamController.DeleteTeamMember",
                "parameters": [
                    {
                        "in": "path",
                        "name": "teamid",
                        "description": "the id of the team member you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/myteam": {
            "get": {
                "tags": [
                    "team"
                ],
                "description": "gets a team information",
                "operationId": "TeamController.GetMyTeamInfo",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/report": {
            "get": {
                "tags": [
                    "team"
                ],
                "description": "gets a team list report",
                "operationId": "TeamController.GetTeamReport",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/team/verifi/{userid}": {
            "get": {
                "tags": [
                    "team"
                ],
                "description": "checks if a user has a team",
                "operationId": "TeamController.VerifyHasTeam",
                "parameters": [
                    {
                        "in": "path",
                        "name": "teamid",
                        "description": "the user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ValidResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/token/token/{email}": {
            "get": {
                "tags": [
                    "token"
                ],
                "description": "confirms a number have been registerd for today",
                "operationId": "TokenController.Self Sign-In",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "guest phone number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Success"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/update/": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "update the user profile",
                "operationId": "UserController.UpdateProfile",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The uid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":uid is not int"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.KPI": {
            "title": "KPI",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "employee": {
                    "type": "string"
                },
                "employee_comment": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "kpi": {
                    "type": "string"
                },
                "recurring": {
                    "type": "boolean"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "strategic_obj_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "team_lead": {
                    "type": "string"
                },
                "team_lead_comment": {
                    "type": "string"
                },
                "team_lead_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "team_lead_score": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "weight": {
                    "type": "integer",
                    "format": "int64"
                },
                "year": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Model": {
            "title": "Model",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.Success": {
            "title": "Success",
            "type": "object"
        },
        "models.Team": {
            "title": "Team",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "department": {
                    "type": "string"
                },
                "department_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lead": {
                    "type": "string"
                },
                "lead_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "department": {
                    "type": "string"
                },
                "department_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "image": {
                    "type": "string"
                },
                "job_title": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "role": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated_at": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.ValidResponse": {
            "title": "ValidResponse",
            "type": "object"
        },
        "models.Visit": {
            "title": "Visit",
            "type": "object"
        },
        "object": {
            "title": "object",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "UserController Operations about Users\n"
        },
        {
            "name": "lead",
            "description": "TeamLeadController handles all team lead functionalities\n"
        },
        {
            "name": "token",
            "description": "TokenController handles all about token\n"
        },
        {
            "name": "team",
            "description": "TeamController handles all team RELATED MATTERS\n"
        },
        {
            "name": "kpi",
            "description": "KPIController controls all KPI related activities\n"
        },
        {
            "name": "objectives",
            "description": "ObjectiveController controls all strategic objectives\n"
        }
    ]
}